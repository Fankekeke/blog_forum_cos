<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.cos.dao.PostInfoMapper">

    <!-- 分页获取贴子消息 -->
    <select id="selectPostPage" resultType="java.util.LinkedHashMap">
        SELECT
        pi.id,
        pi.title,
        pi.content,
        pi.images,
        pi.user_id AS userId,
        pi.create_date AS createDate,
        pi.pageviews,
        pi.tag_ids AS tagIds,
        pi.delete_flag AS deleteFlag,
        ui.name as username,
        ui.code as userCode,
        ui.images AS userImages,
        IFNULL(SUM(ci.post_id), 0) AS collect,
        IFNULL(SUM(ri.post_id), 0) AS reply
        FROM
        post_info pi
        LEFT JOIN collect_info ci ON ( ci.post_id = pi.id ) AND ci.delete_flag = 0
        LEFT JOIN reply_info ri ON ( ri.post_id = pi.id ) AND ri.delete_flag = 0
        LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        WHERE
        1 = 1
        <if test="postInfo.title != null and postInfo.title != ''">
            AND pi.title LIKE CONCAT('%',#{postInfo.title},'%')
        </if>
        <if test="postInfo.username != null and postInfo.username != ''">
            AND ui.name LIKE CONCAT('%',#{postInfo.username},'%')
        </if>
        <if test="postInfo.tagId != null">
            AND FIND_IN_SET(#{ postInfo.tagId }, pi.tag_ids)
        </if>
        <if test="postInfo.userId != null">
            AND pi.user_id = #{postInfo.userId}
        </if>
        GROUP BY pi.id
        ORDER BY pi.create_date DESC
    </select>

    <!-- 获取贴子消息 -->
    <select id="selectPostList" resultType="java.util.LinkedHashMap">
        SELECT
        pi.id,
        pi.title,
        pi.content,
        pi.images,
        pi.user_id AS userId,
        pi.create_date AS createDate,
        pi.pageviews,
        pi.tag_ids AS tagIds,
        pi.delete_flag AS deleteFlag,
        ui.name as username,
        ui.code as userCode,
        ui.images AS userImages,
        IFNULL(SUM(ci.post_id), 0) AS collect,
        IFNULL(SUM(ri.post_id), 0) AS reply
        FROM
        post_info pi
        LEFT JOIN collect_info ci ON ( ci.post_id = pi.id ) AND ci.delete_flag = 0
        LEFT JOIN reply_info ri ON ( ri.post_id = pi.id ) AND ri.delete_flag = 0
        LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        WHERE
        1 = 1
        <if test="postInfo.title != null and postInfo.title != ''">
            AND pi.title LIKE CONCAT('%',#{postInfo.title},'%')
        </if>
        GROUP BY pi.id
        ORDER BY pi.create_date DESC
    </select>

    <!-- 根据用户获取贴子信息 -->
    <select id="getPostByUser" resultType="java.util.LinkedHashMap">
        SELECT pi.id,
        pi.title,
        pi.content,
        pi.images,
        pi.user_id AS userId,
        pi.create_date AS createDate,
        pi.pageviews,
        pi.tag_ids AS tagIds,
        pi.delete_flag AS deleteFlag,
        ui.name as username,
        ui.name as userName,
        ui.avatar,
        ui.images as userImages,
        IFNULL(COUNT(distinct (ci.id)), 0) AS collect,
        IFNULL(COUNT(ri.id), 0) AS reply,
        tag_info.`name` AS tagNames
        FROM post_info pi
        LEFT JOIN collect_info ci ON (ci.post_id = pi.id) AND ci.delete_flag = 0
        LEFT JOIN reply_info ri ON (ri.post_id = pi.id) AND ri.delete_flag = 0
        LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        LEFT JOIN tag_info ON ( tag_info.id = pi.tag_ids )
        WHERE pi.delete_flag = 0
        <if test="userId != null and userId != ''">
            AND pi.user_id = #{userId}
        </if>
        GROUP BY pi.id
        ORDER BY pi.create_date DESC
    </select>

    <!-- 获取模块下的贴子 -->
    <select id="getPostByTag" resultType="java.util.LinkedHashMap">
        SELECT pi.id,
        pi.title,
        pi.content,
        pi.images,
        pi.user_id AS userId,
        pi.create_date AS createDate,
        pi.pageviews,
        pi.tag_ids AS tagIds,
        pi.delete_flag AS deleteFlag,
        ui.name as username,
        ui.name as userName,
        ui.avatar,
        ui.images as userImages,
        IFNULL(COUNT(distinct (ci.id)), 0) AS collect,
        IFNULL(COUNT(ri.id), 0) AS reply
        FROM post_info pi
        LEFT JOIN collect_info ci ON (ci.post_id = pi.id) AND ci.delete_flag = 0
        LEFT JOIN reply_info ri ON (ri.post_id = pi.id) AND ri.delete_flag = 0
        LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        WHERE pi.delete_flag = 0
        <if test="tagId != null and tagId != ''">
            AND FIND_IN_SET(#{ tagId }, pi.tag_ids)
        </if>
        GROUP BY pi.id
        ORDER BY pi.create_date DESC
    </select>

    <select id="postDetail" resultType="java.util.LinkedHashMap">
        SELECT pi.id,
               pi.title,
               pi.content,
               pi.images,
               pi.user_id                         AS userId,
               pi.create_date                     AS createDate,
               pi.pageviews,
               pi.tag_ids                         AS tagIds,
               pi.delete_flag                     AS deleteFlag,
               ui.name                            as username,
               ui.images                          as userImages,
               IFNULL(COUNT(distinct (ci.id)), 0) AS collect,
               IFNULL(COUNT(ri.id), 0)            AS reply
        FROM post_info pi
                 LEFT JOIN collect_info ci ON (ci.post_id = pi.id) AND ci.delete_flag = 0
                 LEFT JOIN reply_info ri ON (ri.post_id = pi.id) AND ri.delete_flag = 0
                 LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        WHERE pi.id = #{ postId }
    </select>

    <!-- 模糊查询帖子信息 -->
    <select id="postByKey" resultType="java.util.LinkedHashMap">
        SELECT pi.id,
               pi.title,
               pi.content,
               pi.images,
               pi.user_id                         AS userId,
               pi.create_date                     AS createDate,
               pi.pageviews,
               pi.tag_ids                         AS tagIds,
               pi.delete_flag                     AS deleteFlag,
               ui.name                            as username,
               ui.images                          as userImages,
               IFNULL(COUNT(distinct (ci.id)), 0) AS collect,
               IFNULL(COUNT(ri.id), 0)            AS reply
        FROM post_info pi
                 LEFT JOIN collect_info ci ON (ci.post_id = pi.id) AND ci.delete_flag = 0
                 LEFT JOIN reply_info ri ON (ri.post_id = pi.id) AND ri.delete_flag = 0
                 LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        WHERE pi.delete_flag = 0
          AND pi.title LIKE CONCAT('%', #{key}, '%')
        GROUP BY pi.id
        ORDER BY pi.create_date DESC
    </select>

    <!-- 推荐贴子 -->
    <select id="recommend" resultType="java.util.LinkedHashMap">
        SELECT
        pi.id,
        pi.title,
        pi.content,
        pi.images,
        pi.user_id AS userId,
        pi.create_date AS createDate,
        pi.pageviews,
        pi.tag_ids AS tagIds,
        pi.delete_flag AS deleteFlag,
        ui.name as username,
        ui.images as userImages,
        IFNULL( COUNT( DISTINCT ( ci.id )), 0 ) AS collect,
        IFNULL( COUNT( ri.id ), 0 ) AS reply
        FROM
        post_info pi
        LEFT JOIN user_info ui ON (ui.id = pi.user_id)
        LEFT JOIN collect_info ci ON ( ci.post_id = pi.id )
        AND ci.delete_flag = 0
        LEFT JOIN reply_info ri ON ( ri.post_id = pi.id )
        AND ri.delete_flag = 0
        WHERE
        1 = 1
        <if test="tagId != null and tagId != -1">
            AND FIND_IN_SET( #{ tagId }, pi.tag_ids )
            <if test="collectUserIds != null and collectUserIds != ''">
                OR FIND_IN_SET( tu.USER_ID, #{ collectUserIds } )
            </if>
        </if>
        AND pi.delete_flag = 0
        GROUP BY
        pi.id
        ORDER BY
        pi.create_date DESC
    </select>

    <!-- 根据贴子ID获取回复信息 -->
    <select id="replyInfoByPostId" resultType="java.util.LinkedHashMap">
        SELECT
            ri.id,
            ri.user_id AS userId,
            ri.content,
            ri.create_date AS createDate,
            ui.user_name AS userName,
            ui.avatar
        FROM
            reply_info ri
                LEFT JOIN user_info ui ON ( ui.id = ri.user_id )
        WHERE
            1 = 1
          AND ri.post_id = #{ postId }
        ORDER BY
            ui.create_date DESC
    </select>

    <!-- 获取具体的帖子回复信息 -->
    <select id="replyListByPostId" resultType="java.util.LinkedHashMap">
        SELECT ri.id,
               ri.user_id     AS userId,
               ri.content,
               ri.send_create AS createDate,
               ui.name AS userName,
               ui.avatar
        FROM reply_info ri
                 LEFT JOIN user_info ui ON (ui.id = ri.user_id)
        WHERE ri.delete_flag = 0
          AND ri.post_id = #{ postId }
        ORDER BY ri.send_create ASC
    </select>

    <!-- 根据贴子编号获取详细信息 -->
    <select id="getPostInfoById" resultType="java.util.LinkedHashMap">
        SELECT
            pi.id,
            pi.title,
            pi.content,
            pi.images,
            pi.create_date AS createDate,
            ui.user_name AS userName,
            ui.avatar
        FROM
            post_info pi
                LEFT JOIN user_info ui ON ( pi.user_id = ui.id )
        WHERE
            pi.id = #{postId}
    </select>

    <!-- 十天内发帖统计 -->
    <select id="selectOrderNumWithinDays" resultType="java.util.LinkedHashMap">
        SELECT
        DATE_FORMAT( spo.days, '%m-%d' ) AS days,
        IFNULL(COUNT(oi.id), 0) AS count
        FROM
        (
        SELECT
        DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo
        LEFT JOIN post_info oi ON (
        DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )
        )
        GROUP BY
        days
        ORDER BY
        days ASC
    </select>

    <!-- 十天内访问统计 -->
    <select id="selectOrderViewWithinDays" resultType="java.util.LinkedHashMap">
        SELECT
        DATE_FORMAT( spo.days, '%m-%d' ) AS days,
        IFNULL(COUNT(oi.id), 0) AS count
        FROM
        (
        SELECT
        DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo
        LEFT JOIN user_record_info oi ON (
        DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )
        )
        GROUP BY
        days
        ORDER BY
        days ASC
    </select>

    <!-- 根据时间获取发帖数量 -->
    <select id="selectPostNumByDate" resultType="java.lang.Integer">
        SELECT
            count(pi.id)
        FROM
            post_info pi
        WHERE
            1 = 1
        <if test="year != null and year != ''">
            AND DATE_FORMAT(pi.create_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(pi.create_date, '%m') = #{month}
        </if>
    </select>

    <!-- 根据时间获取浏览量 -->
    <select id="selectViewNumByDate" resultType="java.lang.Integer">
        SELECT
        count(pi.id)
        FROM
        user_record_info pi
        WHERE
        1 = 1
        <if test="year != null and year != ''">
            AND DATE_FORMAT(pi.create_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(pi.create_date, '%m') = #{month}
        </if>
    </select>
</mapper>
